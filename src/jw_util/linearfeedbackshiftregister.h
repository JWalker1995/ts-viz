#ifndef JWUTIL_LINEARFEEDBACKSHIFTREGISTER_H
#define JWUTIL_LINEARFEEDBACKSHIFTREGISTER_H

#include <assert.h>

namespace jw_util
{

template <typename NumberType>
class LinearFeedbackShiftRegister
{
public:
    LinearFeedbackShiftRegister()
    {}

    LinearFeedbackShiftRegister(unsigned int bits, NumberType init = 1)
        : num(init)
        , mask(get_mask(bits))
    {
        assert(bits > 0);
        assert(init > 0);
        assert(init >> bits == 0);
    }

    NumberType get() const {return num;}

    void next()
    {
        NumberType lsb = num & 1;
        num >>= 1;
        num ^= (-lsb) & mask;
    }

private:
    NumberType num;
    NumberType mask;

    static NumberType get_mask(unsigned int bits)
    {
        /*
        static const NumberType masks[] = {
            0,
            1<<1,
            1<<2 | 1<<1,
            1<<3 | 1<<2,
            1<<4 | 1<<3,
            1<<5 | 1<<3,
            1<<6 | 1<<5,
            1<<7 | 1<<6,
            1<<8 | 1<<6 | 1<<5 | 1<<4,
            1<<9 | 1<<5,
            1<<10 | 1<<7,
            1<<11 | 1<<9,
            1<<12 | 1<<6 | 1<<4 | 1<<1,
            1<<13 | 1<<4 | 1<<3 | 1<<1,
            1<<14 | 1<<5 | 1<<3 | 1<<1,
            1<<15 | 1<<14,
            1<<16 | 1<<15 | 1<<13 | 1<<4,
            1<<17 | 1<<14,
            1<<18 | 1<<11,
            1<<19 | 1<<6 | 1<<2 | 1<<1,
            1<<20 | 1<<17,
            1<<21 | 1<<19,
            1<<22 | 1<<21,
            1<<23 | 1<<18,
            1<<24 | 1<<23 | 1<<22 | 1<<17,
            1<<25 | 1<<22,
            1<<26 | 1<<6 | 1<<2 | 1<<1,
            1<<27 | 1<<5 | 1<<2 | 1<<1,
            1<<28 | 1<<25,
            1<<29 | 1<<27,
            1<<30 | 1<<6 | 1<<4 | 1<<1,
            1<<31 | 1<<28,
            1<<32 | 1<<22 | 1<<2 | 1<<1,
            1<<33 | 1<<20,
            1<<34 | 1<<27 | 1<<2 | 1<<1,
            1<<35 | 1<<33,
            1<<36 | 1<<25,
            1<<37 | 1<<5 | 1<<4 | 1<<3 | 1<<2 | 1<<1,
            1<<38 | 1<<6 | 1<<5 | 1<<1,
            1<<39 | 1<<35,
            1<<40 | 1<<38 | 1<<21 | 1<<19,
            1<<41 | 1<<38,
            1<<42 | 1<<41 | 1<<20 | 1<<19,
            1<<43 | 1<<42 | 1<<38 | 1<<37,
            1<<44 | 1<<43 | 1<<18 | 1<<17,
            1<<45 | 1<<44 | 1<<42 | 1<<41,
            1<<46 | 1<<45 | 1<<26 | 1<<25,
            1<<47 | 1<<42,
            1<<48 | 1<<47 | 1<<21 | 1<<20,
            1<<49 | 1<<40,
            1<<50 | 1<<49 | 1<<24 | 1<<23,
            1<<51 | 1<<50 | 1<<36 | 1<<35,
            1<<52 | 1<<49,
            1<<53 | 1<<52 | 1<<38 | 1<<37,
            1<<54 | 1<<53 | 1<<18 | 1<<17,
            1<<55 | 1<<31,
            1<<56 | 1<<55 | 1<<35 | 1<<34,
            1<<57 | 1<<50,
            1<<58 | 1<<39,
            1<<59 | 1<<58 | 1<<38 | 1<<37,
            1<<60 | 1<<59,
            1<<61 | 1<<60 | 1<<46 | 1<<45,
            1<<62 | 1<<61 | 1<<6 | 1<<5,
            1<<63 | 1<<62,
            1<<64 | 1<<63 | 1<<61 | 1<<60,
        };

        return masks[bits] >> 1;
        */

        static const NumberType masks[] = {
            0,
            1<<0,
            1<<1 | 1<<0,
            1<<2 | 1<<1,
            1<<3 | 1<<2,
            1<<4 | 1<<2,
            1<<5 | 1<<4,
            1<<6 | 1<<5,
            1<<7 | 1<<5 | 1<<4 | 1<<3,
            1<<8 | 1<<4,
            1<<9 | 1<<6,
            1<<10 | 1<<8,
            1<<11 | 1<<5 | 1<<3 | 1<<0,
            1<<12 | 1<<3 | 1<<2 | 1<<0,
            1<<13 | 1<<4 | 1<<2 | 1<<0,
            1<<14 | 1<<13,
            1<<15 | 1<<14 | 1<<12 | 1<<3,
            1<<16 | 1<<13,
            1<<17 | 1<<10,
            1<<18 | 1<<5 | 1<<1 | 1<<0,
            1<<19 | 1<<16,
            1<<20 | 1<<18,
            1<<21 | 1<<20,
            1<<22 | 1<<17,
            1<<23 | 1<<22 | 1<<21 | 1<<16,
            1<<24 | 1<<21,
            1<<25 | 1<<5 | 1<<1 | 1<<0,
            1<<26 | 1<<4 | 1<<1 | 1<<0,
            1<<27 | 1<<24,
            1<<28 | 1<<26,
            1<<29 | 1<<5 | 1<<3 | 1<<0,
            1<<30 | 1<<27,
            1<<31 | 1<<21 | 1<<1 | 1<<0,
            1<<32 | 1<<19,
            1<<33 | 1<<26 | 1<<1 | 1<<0,
            1<<34 | 1<<32,
            1<<35 | 1<<24,
            1<<36 | 1<<4 | 1<<3 | 1<<2 | 1<<1 | 1<<0,
            1<<37 | 1<<5 | 1<<4 | 1<<0,
            1<<38 | 1<<34,
            1<<39 | 1<<37 | 1<<20 | 1<<18,
            1<<40 | 1<<37,
            1<<41 | 1<<40 | 1<<19 | 1<<18,
            1<<42 | 1<<41 | 1<<37 | 1<<36,
            1<<43 | 1<<42 | 1<<17 | 1<<16,
            1<<44 | 1<<43 | 1<<41 | 1<<40,
            1<<45 | 1<<44 | 1<<25 | 1<<24,
            1<<46 | 1<<41,
            1<<47 | 1<<46 | 1<<20 | 1<<19,
            1<<48 | 1<<39,
            1<<49 | 1<<48 | 1<<23 | 1<<22,
            1<<50 | 1<<49 | 1<<35 | 1<<34,
            1<<51 | 1<<48,
            1<<52 | 1<<51 | 1<<37 | 1<<36,
            1<<53 | 1<<52 | 1<<17 | 1<<16,
            1<<54 | 1<<30,
            1<<55 | 1<<54 | 1<<34 | 1<<33,
            1<<56 | 1<<49,
            1<<57 | 1<<38,
            1<<58 | 1<<57 | 1<<37 | 1<<36,
            1<<59 | 1<<58,
            1<<60 | 1<<59 | 1<<45 | 1<<44,
            1<<61 | 1<<60 | 1<<5 | 1<<4,
            1<<62 | 1<<61,
            1<<63 | 1<<62 | 1<<60 | 1<<59,
        };

        return masks[bits];
    }
};

}

#endif // JWUTIL_LINEARFEEDBACKSHIFTREGISTER_H
